defaults: &defaults
  working_directory: ~/bootstrap-aws-roles
  environment:
    BASH_ENV: local.env
  docker:
    - image: quay.io/feedyard/circleci-infra-agent

version: 2

jobs:

  # until circleci supports parameterized worklfows there are jobs per account
  # the bootstrap profile and roles pipeline includes three account
  # profile -> sandbox -> nonprod -> prod
  profile-plan:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh profile
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $PROFILE_ACCESS_KEY_ID $PROFILE_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: create terraform plan
          command: invoke plan profile $PROFILE_ACCESS_KEY_ID $PROFILE_SECRET_ACCESS_KEY

  profile-apply:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh profile
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $PROFILE_ACCESS_KEY_ID $PROFILE_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: apply terraform plan
          command: invoke apply profile $PROFILE_ACCESS_KEY_ID $PROFILE_SECRET_ACCESS_KEY
      - run:
          name: run tests
          command: invoke test

  sandbox-plan:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh sandbox
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $SANDBOX_ACCESS_KEY_ID $SANDBOX_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: create terraform plan
          command: invoke plan sandbox $SANDBOX_ACCESS_KEY_ID $SANDBOX_SECRET_ACCESS_KEY

  sandbox-apply:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh sandbox
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $SANDBOX_ACCESS_KEY_ID $SANDBOX_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: apply terraform plan
          command: invoke apply sandbox $SANDBOX_ACCESS_KEY_ID $SANDBOX_SECRET_ACCESS_KEY
      - run:
          name: run tests
          command: invoke test


  # nonprod -> prod
  nonprod-plan:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh nonprod
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $NONPROD_ACCESS_KEY_ID $NONPROD_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: create terraform plan
          command: invoke plan nonprod $NONPROD_ACCESS_KEY_ID $NONPROD_SECRET_ACCESS_KEY

  nonprod-apply:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh nonprod
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $NONPROD_ACCESS_KEY_ID $NONPROD_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: apply terraform plan
          command: invoke apply nonprod $NONPROD_ACCESS_KEY_ID $NONPROD_SECRET_ACCESS_KEY
      - run:
          name: run tests
          command: invoke test


  # prod
  prod-plan:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh prod
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $PROD_ACCESS_KEY_ID $PROD_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: create terraform plan
          command: invoke plan prod $PROD_ACCESS_KEY_ID $PROD_SECRET_ACCESS_KEY

  prod-apply:
    <<: *defaults

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: confirm Docker
          command: docker info
      - run:
          name: decrypt secrets
          command: invoke dec
      - run:
          name: setup terraform state file location
          command: bash setup_backend.sh prod
      - run:
          name: setup aws profile
          command: bash setup_profile.sh $PROD_ACCESS_KEY_ID $PROD_SECRET_ACCESS_KEY
      - run:
          name: initialize the terraform state backend
          command: invoke init
      - run:
          name: apply terraform plan
          command: invoke apply prod $PROD_ACCESS_KEY_ID $PROD_SECRET_ACCESS_KEY
      - run:
          name: run tests
          command: invoke test

workflows:
  version: 2
  bootstrap-aws-roles-pipeline:
    jobs:
      - profile-plan
      - approve-profile-plan:
          type: approval
          requires:
            - profile-plan
      - profile-apply:
          requires:
            - approve-profile-plan
      - sandbox-plan:
          requires:
            -profile-apply
      - approve-sandbox-plan:
          type: approval
          requires:
            - sandbox-plan
      - sandbox-apply:
          requires:
            - approve-sandbox-plan
      - nonprod-plan:
          requires:
            - sandbox-apply
      - approve-nonprod-plan:
          type: approval
          requires:
            - nonprod-plan
      - nonprod-apply:
          requires:
            - approve-nonprod-plan
      - prod-plan:
          requires:
            - nonprod-apply
      - approve-prod-plan:
          type: approval
          requires:
            -  prod-plan
      - prod-apply:
          requires:
            - approve-prod-plan